{"version":3,"sources":["Baitap2/index.js","Baitapcar/index.js","Condition/index.js","DataBinding/DataBindingClass.js","HandleEvent/index.js","Lists/index.js","State/index.js","UserManagement/UserForm.js","UserManagement/UserList.js","UserManagement/index.js","App.js","reportWebVitals.js","index.js"],"names":["Component","UserForm","props","handleChange","event","target","name","value","setState","state","values","handleSubmit","id","onUpdateUser","onAddUser","username","email","phone","fullName","address","preProps","prevState","this","user","className","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","htmlFor","onChange","placeholder","aria-describedby","onClick","UserList","users","map","onGetUser","data-toggle","data-target","onDelete","UserManagement","fetchUsers","a","axios","method","url","result","data","console","log","handleAddUser","handleUpdateUser","handleGetUser","userId","selectedUser","handleDelete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f5154cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Baitap2 extends Component {\r\n  state = {\r\n    imgUrl: \"./img/imgRedCar.jpg\",\r\n  };\r\n\r\n  changeCar = (value) => {\r\n    // switch (value) {\r\n    //   case \"red\":\r\n    //     this.setState({ imgUrl: \"./img/imgRedCar.jpg\" });\r\n    //     break;\r\n    //   case \"sliver\":\r\n    //     this.setState({ imgUrl: \"./img/imgSilverCar.jpg\" });\r\n    //     break;\r\n    //   case \"black\":\r\n    //     this.setState({ imgUrl: \"./img/imgBlackCar.jpg\" });\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n\r\n    const mapping = {\r\n      red: \"./img/imgRedCar.jpg\",\r\n      sliver: \"./img/imgSilverCar.jpg\",\r\n      black: \"./img/imgBlackCar.jpg\",\r\n    };\r\n\r\n    this.setState({\r\n      imgUrl: mapping[value],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <img className=\"w-100\" src={this.state.imgUrl} alt=\"Car\" />\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <button\r\n              className=\"btn btn-danger mr-4\"\r\n              onClick={() => this.changeCar(\"red\")}\r\n            >\r\n              Red\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary mr-4\"\r\n              onClick={() => this.changeCar(\"sliver\")}\r\n            >\r\n              Sliver\r\n            </button>\r\n            <button\r\n              className=\"btn btn-dark\"\r\n              onClick={() => this.changeCar(\"black\")}\r\n            >\r\n              Black\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Baitapcar extends Component {\r\n    state = {\r\n        count: 0,\r\n        doubleCount: 0,\r\n    }\r\n    handleCount = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                count: state.count + 1\r\n            }\r\n        });\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                doubleCount: state.count * 2\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n           <div>\r\n                <p>count: {this.state.count}</p> \r\n                <p>doubleCount: {this.state.doubleCount}</p> \r\n                <button onClick={this.handleCount}>Click</button>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ConditionClass extends Component {\r\n  isLogin = false\r\n\r\n  toggleLogin = () => {\r\n    this.isLogin = !this.isLogin\r\n    console.log(this.isLogin)\r\n  }\r\n\r\n  render() {\r\n    if(this.isLogin) {\r\n      return <div>\r\n        <p>Đã Login</p>\r\n        <button onClick={this.toggleLogin}>Đăng Xuất</button>\r\n      </div>\r\n    }\r\n\r\n    return <div>\r\n      <p>Chưa Login</p>\r\n      <button onClick={this.toggleLogin}>Đăng Nhập</button>\r\n    </div>\r\n\r\n    // Sử dụng toán tử bậc 3\r\n    return (\r\n      <div>\r\n        {this.isLogin ? <p>Đã Login</p> : <p>Chưa Login</p>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// function ConditionFunction() {\r\n//   let isLogin = false;\r\n\r\n//   // if(isLogin) {\r\n//   //   return <p>Đã Đăng Nhập</p>\r\n//   // }\r\n\r\n//   // return (\r\n//   //   <p>Chưa Đăng Nhập</p>\r\n//   // )\r\n\r\n//   return (\r\n//     <div>\r\n//       {isLogin ? <p>Đã Login</p> : <p>Chưa Login</p>}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DataBindingClass extends Component {\r\n  content = \"Hello Reactjs\";\r\n\r\n  xuatThongTin = (name, age) => {\r\n    return (\r\n      <div>\r\n        <p>{name}</p>\r\n        <p>{age}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let a = \"Hello\";\r\n    let title = \"Cybersoft\";\r\n    return (\r\n      <div>\r\n        <p>{a}</p>\r\n        <p>{title}</p>\r\n        <p>{this.content}</p>\r\n\r\n        {this.xuatThongTin('Dan Nguyen', 25)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class EventClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.showMessage = this.showMessage.bind(this);\r\n  }\r\n\r\n  showMessage() {\r\n    console.log(this);\r\n    alert(\"Hello\");\r\n  };\r\n\r\n  // showMessage = () => {\r\n  //   // Để có thể sử dụng this ở đây, showMessage phải viết theo kiểu arrow function\r\n  //   console.log(this)\r\n  //   alert(\"Hello\");\r\n  // };\r\n\r\n  showFullName = (name) => {\r\n    alert(`Hello ${name}`);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    alert(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.showMessage}>Click Message</button>\r\n        <button onClick={() => this.showFullName(\"Dan\")}>Click Name</button>\r\n        <input onChange={this.handleChange} />\r\n        <input onChange={(event) => this.handleChange(event)} />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ListsClass extends Component {\r\n  products = [\r\n    { id: 1, name: \"Iphone 12\", price: 30000000 },\r\n    { id: 2, name: \"Samsung S21\", price: 25000000 },\r\n    { id: 3, name: \"Xiaomi Mi 11\", price: 20000000 },\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"demo\">\r\n        {/* {this.products.map((item, index) => {\r\n          // logic....\r\n          return (\r\n            // Hạn chế sử dụng index làm key\r\n            <p key={item.id}>\r\n              {item.id} - {item.name} - {item.price}\r\n            </p>\r\n          );\r\n        })} */}\r\n\r\n        {this.products.map((item, index) => (\r\n          // Hạn chế sử dụng index làm key\r\n          <p key={item.id}>\r\n            {item.id} - {item.name} - {item.price}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class StateClass extends Component {\r\n  state = {\r\n    // Demo 1\r\n    isLogin: false,\r\n    // Demo 2\r\n    count: 0,\r\n    doubleCount: 0,\r\n  };\r\n\r\n  toggleLogin = () => {\r\n    // Không được thay đổi state trực tiếp\r\n    // this.state.isLogin = !this.state.isLogin;\r\n\r\n    // Phải thay đổi state thông qua hàm setState\r\n    this.setState(\r\n      {\r\n        isLogin: !this.state.isLogin,\r\n      },\r\n      // Sau khi setState thành công sẽ nhảy vào trong callback này\r\n      () => {\r\n        console.log(this.state.isLogin); // Giá trị mới của state\r\n      }\r\n    );\r\n    // Không thể lấy kết quả mới sau khi setState ngay đây, bởi vì setState là 1 hàm bất đồng bộ\r\n    console.log(this.state.isLogin); // Vẫn là giá trị cũ\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    // Cách 1: Dùng callback ở tham số thứ 2, để nhận giá trị state mới nhất\r\n    // this.setState(\r\n    //   {\r\n    //     count: this.state.count + 1,\r\n    //   },\r\n    //   () => {\r\n    //     this.setState({\r\n    //       doubleCount: this.state.count * 2,\r\n    //     });\r\n    //   }\r\n    // );\r\n\r\n    // Cách 2: Tham số thứ 1 nhận vào là 1 callback với tham số là state\r\n    // state này được đảm bảo luôn luôn là mới nhất\r\n    this.setState((state) => {\r\n      return {\r\n        count: state.count + 1,\r\n      };\r\n    });\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        doubleCount: state.count * 2,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Demo 1\r\n    // if (this.state.isLogin) {\r\n    //   return (\r\n    //     <div>\r\n    //       <p>Đã Login</p>\r\n    //       <button onClick={this.toggleLogin}>Đăng Xuất</button>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n    // return (\r\n    //   <div>\r\n    //     <p>Chưa Login</p>\r\n    //     <button onClick={this.toggleLogin}>Đăng Nhập</button>\r\n    //   </div>\r\n    // );\r\n\r\n    // Demo 2\r\n    return (\r\n      <div>\r\n        <p>Count: {this.state.count}</p>\r\n        <p>DoubleCount: {this.state.doubleCount}</p>\r\n\r\n        <button onClick={this.handleIncrement}>Click</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class UserForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             values: {\r\n                 username: \"\",\r\n                 email: \"\",\r\n                 phone: \"\",\r\n                 fullName: \"\",\r\n                 address: \"\",\r\n             },\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(preProps, prevState) {\r\n      if(this.props.user.id && preProps.user.id !== this.props.user.id) {\r\n          this.setState({\r\n              values: this.props.user,\r\n          })\r\n      }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState(state => {\r\n            return {\r\n                values: {\r\n                    ...state.values, [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        if(this.state.values.id) {\r\n            this.props.onUpdateUser(this.state.values);\r\n        } else {\r\n            this.props.onAddUser(this.state.values);\r\n        }\r\n        this.setState({\r\n            values: {\r\n                username: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                fullName: \"\",\r\n                address: \"\",\r\n            },\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modelId\"\r\n          tabIndex={-1}\r\n          role=\"dialog\"\r\n          aria-labelledby=\"modelTitleId\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">User Form</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\" /> Username\r\n                  <input\r\n                    type=\"text\" value={this.state.values.username}\r\n                    onChange={this.handleChange}\r\n                    name = \"username\"\r\n                    id\r\n                    className=\"form-control\"\r\n                    placeholder\r\n                    aria-describedby=\"helpId\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\" /> Email\r\n                  <input\r\n                    type=\"text\" value={this.state.values.email}\r\n                    onChange={this.handleChange}\r\n                    name =\"email\"\r\n                    id\r\n                    className=\"form-control\"\r\n                    placeholder\r\n                    aria-describedby=\"helpId\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\" /> FullName\r\n                  <input\r\n                    type=\"text\" value={this.state.values.fullName}\r\n                    onChange={this.handleChange}\r\n                    name =\"fullName\"\r\n                    id\r\n                    className=\"form-control\"\r\n                    placeholder\r\n                    aria-describedby=\"helpId\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\" /> Phone\r\n                  <input\r\n                    type=\"text\" value={this.state.values.phone}\r\n                    onChange={this.handleChange}\r\n                    name =\"phone\"\r\n                    id\r\n                    className=\"form-control\"\r\n                    placeholder\r\n                    aria-describedby=\"helpId\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\" /> Address\r\n                  <input\r\n                    type=\"text\" value={this.state.values.address}\r\n                    onChange={this.handleChange}\r\n                    name =\"address\"\r\n                    id\r\n                    className=\"form-control\"\r\n                    placeholder\r\n                    aria-describedby=\"helpId\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class UserList extends Component {\r\n    render() {\r\n        return (\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>UserName</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>FullName</th>\r\n                        <th>Address</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.users.map( user => (\r\n                        <tr key ={user.id}>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.username}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.phone}</td>\r\n                            <td>{user.fullName}</td>\r\n                            <td>{user.address}</td>\r\n                            <td>\r\n                                <button onClick = {() => this.props.onGetUser(user.id)} data-toggle=\"modal\" data-target=\"#modelId\" className=\"btn btn-success mr-4\">Update</button>\r\n                                \r\n                                <button onClick = {() => this.props.onDelete(user.id)} className=\"btn btn-danger\">Delete</button> \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport UserForm from './UserForm'\r\nimport UserList from './UserList'\r\nimport axios from 'axios'\r\n\r\nexport default class UserManagement extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             users: [],\r\n             selectedUser: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Chỉ chạy 1 lần sau khi chạy ứng dụng\r\n        this.fetchUsers();\r\n    }\r\n\r\n    // Lấy data từ api\r\n    fetchUsers = async () => {\r\n        try {\r\n            const result = await axios({\r\n                method: \"GET\",\r\n                url: \"https://609ce52c04bffa001792d876.mockapi.io/Users\"\r\n            });\r\n\r\n            this.setState({ users: result.data })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    handleAddUser = async (user) => {\r\n        try {\r\n            await axios({\r\n                method: \"POST\",\r\n                url: \"https://609ce52c04bffa001792d876.mockapi.io/Users\",\r\n                data: user,\r\n            })\r\n            this.fetchUsers();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    handleUpdateUser = async (user) => {\r\n        const {id,...data} = user;\r\n        try {\r\n            await axios({\r\n             method: \"PUT\",\r\n             url: `https://609ce52c04bffa001792d876.mockapi.io/Users/${id}`,\r\n             data: user\r\n            })\r\n \r\n            this.fetchUsers(); \r\n \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    handleGetUser = async (userId) => {\r\n        try {\r\n            const result = await axios({\r\n                 method: \"GET\",\r\n                 url: `https://609ce52c04bffa001792d876.mockapi.io/Users/${userId}`\r\n             });\r\n             this.setState({\r\n                 selectedUser: result.data,\r\n             });\r\n           \r\n \r\n         } catch (error) {\r\n             console.log(error);\r\n         }\r\n    }\r\n    handleDelete = async (userId) => {\r\n        try {\r\n            await axios({\r\n                method: \"DELETE\",\r\n                url: `https://609ce52c04bffa001792d876.mockapi.io/Users/${userId}`,\r\n            });\r\n\r\n            this.fetchUsers();\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render() {\r\n        return <div className=\"container\">\r\n            <h1 className=\"text-center\">UserManagement</h1>\r\n            <div className=\"text-right my-4\">\r\n                <button data-toggle=\"modal\" data-target=\"#modelId\" className=\"btn btn-primary\">Add User</button>\r\n            </div>\r\n            <UserList users = {this.state.users} onGetUser = {this.handleGetUser} onDelete = {this.handleDelete} />\r\n            <UserForm user = {this.state.selectedUser} onAddUser = {this.handleAddUser} onUpdateUser = {this.handleUpdateUser} />\r\n        </div>\r\n    }\r\n}\r\n","// import Header from \"./components/Header\";\r\n// import Footer from \"./components/Footer\";\r\n// import Sidebar from \"./components/Sidebar\";\r\n// import Content from \"./components/Content\";\r\n\r\nimport Baitap1 from \"./Baitap1\";\r\nimport Baitap2 from \"./Baitap2\";\r\nimport Baitapcar from \"./Baitapcar\";\r\nimport ConditionClass from \"./Condition\";\r\nimport DataBindingClass from \"./DataBinding/DataBindingClass\";\r\nimport DataBindingFunction from \"./DataBinding/DataBindingFunction\";\r\nimport EventClass from \"./HandleEvent\";\r\nimport ListsClass from \"./Lists\";\r\nimport StateClass from \"./State\";\r\nimport UserManagement from \"./UserManagement\";\r\n// JSX - Javascript XML => Kết hợp javascript với HTML lại với nhau\r\n\r\n// Component App\r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <Header />\r\n    //   <div className=\"d-flex\">\r\n    //     <div className=\"w-25\">\r\n    //       <Sidebar />\r\n    //     </div>\r\n    //     <div className=\"w-75\">\r\n    //       <Content />\r\n    //     </div>\r\n    //   </div>\r\n    //   <Footer />\r\n    // </div>\r\n    <>\r\n      <UserManagement />\r\n\r\n      {/* <Baitap1 /> */}\r\n      {/* <DataBindingClass /> */}\r\n      {/* <DataBindingFunction /> */}\r\n      {/* <EventClass /> */}\r\n      {/* <ConditionClass /> */}\r\n      {/* <ListsClass /> */}\r\n      {/* <StateClass /> */}\r\n      {/* <Baitap2 /> */}\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}